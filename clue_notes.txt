
linuxmint - http://localhost:8000/clue/
https://demo-project-c9-pdhummel.c9.io/clue/
curl https://demo-project-c9-pdhummel.c9.io/players/

---------------------------------------------------------------------------------------
http://www.django-rest-framework.org/tutorial/1-serialization
http://stackoverflow.com/questions/17337843/how-to-implement-a-hierarchy-of-resources-eg-parents-id-children-in-django

virtualenv env
source env/bin/activate
#deactivate

 ~/.gitignore_global
 
---------------------------------------------------------------------------------------
. ~/workspace/clue/clue.env
rm ~/workspace/clue/data/clue_sqlite.db
python ~/workspace/clue/djangoclue/manage.py syncdb --noinput
python ~/workspace/clue/djangoclue/manage.py shell

from clue.models import Game, GameBox, Player, GamePlayer
gb = GameBox()
gb.create()
game = Game.objects.create(name='first')
paul = Player.objects.create(name='paul')
christy = Player.objects.create(name='christy')
derek = Player.objects.create(name='derek')
game.add_player(paul, 'CM')
game.add_player(christy, 'MS')
game.add_player(derek, 'PP')
game.start_game()



---------------------------------------------------------------------------------------
x - deal cards
x - make board
    define rooms -- doors
x - place players on board


login and establish session

roll die

API to allow player to move
    move_player(player, x, y)
    validate move

API to allow player to make suggestion
    make_suggestion(player, character, weapon, room)
    validate suggestion
        current room, weapon, character
    find first player with clue
   
   
API to allow player to share clue
    validate clue (suggested_character, suggested_weapon, suggested_room)
    share_clue(from_player, to_player, card)
   
   
API to allow player to view clue and record evidence
   


API to allow player to view known evidence   
   
           
API to allow player to make accusation   


AI moves
AI makes suggestion
AI makes accusation
AI to show clue, if available       
AI records evidence



---------------------------------------------------------------------------------------


WS
	position of pieces
	current player turn
	
	next action - who, what
		roll die and move
		move # spaces
		use secret passage
		stay put
		make suggestion
		make accusation

		show clue
		end turn
	
	chat
	look at cards
	look at evidence





---------------------------------------------------------------------------------------


login screen

game management screen - 
	create game
		invite players
		start game (once all invited players have joined)

	join game


clue board

chat window



---------------------------------------------------------------------------------------

roll die and move
make suggestion
make accusation
move

---------------------------------------------------------------------------------------
Actors
    Player
    Game Organizer extends Player


Game Organizer forms game
Player joins game
Game Organizer starts game
Game Organizer ends game

Player rolls die
Player moves piece
Player makes an accusation
Player makes a suggestion
Player ends turn

Player shares evidence

Player views all known evidence - notebook
Player views cards


browser updates board/game state


---------------------------------------------------------------------------------------
game.roll_die()
game_piece.move_piece(die_count, row, col, room=None)
game_piece.place_piece(self, row, col, room)
game.make_accusation(player, character, weapon, room)
???
game.end_turn(player)

???
game_player.get_my_cards()



---------------------------------------------------------------------------------------



clue/games/
    GET - list of games
    POST - new game
    
clue/games/<pk>/
    GET - get game state to display (poll)
        game state - forming, starting, in_progress, ended
            forming (input options available = start, join)
            starting (input options available = N/A)
            in progress
                current player (input options available = turn actions)
                pending suggestion feedback (input options available = share_evidence)
            ended (input options available = ?)
                winner
                secret cards
    DELETE - end game



clue/games/<game pk>/players/
    GET - list of players
    POST - join game
    
clue/games/<game pk>/players/<player pk>/
    GET - 
        input options available (based on game state)
        player cards
        
    PUT - action
        action=start
        
        action=roll
        action=move
        action=make_suggestion
        action=make_accusation
        action=end_turn
        
        action=share_evidence                


clue/games/<game pk>/pieces/
    GET - list of names and positions
clue/games/<game pk>/pieces/<piece pk>/
    GET - name and position



---------------------------------------------------------------------------------------
Game screen
    List of games
        Game row - view details, join, start
    New game
        
Game board    
    poll game state
    if game state changes
        get player input options
        update menu

---------------------------------------------------------------------------------------

Player
------
View Cards
View Evidence Notepad


Turn
----
Roll Die
Move
Make Suggestion
Make Accusation
End Turn


---------------------------------------------------------------------------------------
TODO:


X - Refactor models into separate files


X - POST clue/games/ - new game

POST clue/games/<game pk>/players/ - new player to join game
    {"name": "Paul", "piece": "PP"}

PUT clue/games/<game pk>/ - start game
DELETE clue/games/<game pk>/ - end game
PUT clue/games/<game pk>/players/<player pk>/ - execute actions
UI
    static menu
    poll and refresh
    execute actions
        roll die
        move
        end turn
        make suggestion (pop-up)
        make accusation (pop-up)
        view cards (pop-up)
    dynamic menu
    evidence notepad
    game screen

---------------------------------------------------------------------------------------



0 24 x=0,y=24, blocked=True, room=, door=


self.board = [[0 for x in xrange(24)] for x in xrange(25)]

spaces = [[0 for x in xrange(24)] for x in xrange(25)] 

0 0 x=0,y=0, blocked=False, room=St, door=
1 0 x=1,y=0, blocked=False, room=St, door=
2 0 x=2,y=0, blocked=False, room=St, door=
3 0 x=3,y=0, blocked=False, room=St, door=
4 0 x=4,y=0, blocked=False, room=St, door=
5 0 x=5,y=0, blocked=False, room=St, door=
6 0 x=6,y=0, blocked=False, room=St, door=
. . .
20 23 x=20,y=23, blocked=False, room=Ki, door=
21 23 x=21,y=23, blocked=False, room=Ki, door=
22 23 x=22,y=23, blocked=False, room=Ki, door=
23 23 x=23,y=23, blocked=False, room=Ki, door=
0 24 x=0,y=24, blocked=True, room=, door=


0 1 x=0,y=1, blocked=False, room=St, door=
1 1 x=1,y=1, blocked=False, room=St, door=
2 1 x=2,y=1, blocked=False, room=St, door=
3 1 x=3,y=1, blocked=False, room=St, door=
4 1 x=4,y=1, blocked=False, room=St, door=
5 1 x=5,y=1, blocked=False, room=St, door=
6 1 x=6,y=1, blocked=False, room=St, door=
...
20 24 x=20,y=24, blocked=True, room=, door=
21 24 x=21,y=24, blocked=True, room=, door=
22 24 x=22,y=24, blocked=True, room=, door=
23 24 x=23,y=24, blocked=True, room=, door=





